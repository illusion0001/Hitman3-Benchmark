name: Build Mods

on: [ push, pull_request, workflow_dispatch ]

jobs:
  build:
    name: Build
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
    - name: Get latest CMake and ninja
      uses: lukka/get-cmake@latest

    - name: Checkout
      uses: actions/checkout@main
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Setup variables
      run: |
        $_ver = "$(git rev-list HEAD --count)-$(git rev-parse --short=8 HEAD)"
        $_name = "$(Split-Path -Path $pwd -Leaf)-$_ver"
        echo "commit_ver=$_name" >> "$Env:GITHUB_ENV"
        echo "arc_name=$_name" >> "$Env:GITHUB_ENV"
        echo "arc_path=${{ github.workspace }}\$_name.zip" >> "$Env:GITHUB_ENV"

    - name: Setup VS environment
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64

    - name: Build and install debug
      run: |
        cmake --preset x64-Debug .
        cmake --build _build/x64-Debug --parallel
        cmake --install _build/x64-Debug

    - name: Build and install release
      run: |
        cmake --preset x64-Release .
        cmake --build _build/x64-Release --parallel
        cmake --install _build/x64-Release

    - name: Copy debug artifacts
      run: |
        mkdir _dist-debug
        Copy-Item _install/x64-Debug/bin/* -Destination _dist-debug/ -Recurse
        Copy-Item LICENSE -Destination _dist-debug/LICENSE

    - name: Copy release artifacts
      run: |
        mkdir _dist-release
        Copy-Item _install/x64-Release/bin/* -Destination _dist-release/ -Recurse
        Copy-Item LICENSE -Destination _dist-release/LICENSE

    - name: Archive debug
      uses: actions/upload-artifact@main
      with:
        name: MyMod-Debug
        path: _dist-debug/*

    - name: Archive release
      uses: actions/upload-artifact@main
      with:
        name: MyMod-Release
        path: _dist-release/*

    - name: Zip files
      if: github.event_name == 'workflow_dispatch'
      run: |
        $compress = @{
          Path = "_dist-debug"
          CompressionLevel = "Optimal"
          DestinationPath = "${{ env.arc_name }}-Debug.zip"
        }
        Compress-Archive @compress

        $compress = @{
          Path = "_dist-release"
          CompressionLevel = "Optimal"
          DestinationPath = "${{ env.arc_name }}-Release.zip"
        }
        Compress-Archive @compress

    - name: Create Release
      if: github.event_name == 'workflow_dispatch'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: gh release create "${{ env.commit_ver }}" "${{ env.arc_name }}-Release.zip" "${{ env.arc_name }}-Debug.zip" --target ${{ GITHUB.SHA }} -t "${{ env.commit_ver }}" || Write-Output "::warning::Upload failed but build completed."; true
